--- AR6kSDK.build_sw.83/host/os/linux/ar6000_drv.c.orig	2023-06-04 15:22:36.478365821 +0000
+++ AR6kSDK.build_sw.83/host/os/linux/ar6000_drv.c	2023-06-04 15:28:47.769202632 +0000
@@ -190,6 +190,8 @@
 #ifdef CONFIG_HOST_TCMD_SUPPORT
 unsigned int testmode =0;
 #endif
+unsigned int arp_logging = 0;
+unsigned int dhcp_logging = 0;
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 module_param_string(ifname, ifname, sizeof(ifname), 0644);
@@ -211,6 +211,8 @@
 module_param(reduce_credit_dribble, int, 0644);
 module_param(allow_trace_signal, int, 0644);
 module_param(processDot11Hdr, int, 0644);
+module_param(arp_logging, int, 0644);
+module_param(dhcp_logging, int, 0644);
 /* ATHENV */
 #ifdef ANDROID_ENV
 module_param(work_mode, int, 0644);
@@ -256,6 +257,8 @@
 MODULE_PARM(processDot11Hdr,"i");
 #ifdef CONFIG_HOST_TCMD_SUPPORT
 MODULE_PARM(testmode, "i");
+MODULE_PARM(arp_logging,"i");
+MODULE_PARM(dhcp_logging,"i");
 #endif
 #endif
 
@@ -3365,6 +3367,8 @@
     A_STATUS        status = pPacket->Status;
     HTC_ENDPOINT_ID   ept = pPacket->Endpoint;
 
+    int arp_dhcp_trace=0;
+
     A_ASSERT((status != A_OK) ||
              (pPacket->pBuffer == (A_NETBUF_DATA(skb) + HTC_HEADER_LEN)));
 
@@ -3458,6 +3462,47 @@
                     AR_DEBUG_PRINTF("RSSI %d\n",
                         ((WMI_DATA_HDR *) A_NETBUF_DATA(skb))->rssi);
 #endif
+
+                    if (arp_logging && (a_netbuf_to_len(skb)>=sizeof(WMI_DATA_HDR)+sizeof(ATH_MAC_HDR)+sizeof(ATH_LLC_SNAP_HDR))) {
+                        int i;
+                        ATH_LLC_SNAP_HDR *datap=NULL;
+
+                       datap = (ATH_LLC_SNAP_HDR *)(A_NETBUF_DATA(skb)+sizeof(WMI_DATA_HDR)+sizeof(ATH_MAC_HDR));
+
+                       if (A_BE2CPU16(datap->etherType)==0x0806) {
+                           arp_dhcp_trace=1;
+                           A_PRINTF("AR6000 ARP: ");
+                           for(i = 0; i < a_netbuf_to_len(skb); i++)
+                               A_PRINTF("%02x ", ((A_UINT8 *)a_netbuf_to_data(skb))[i]);
+                           //A_PRINTF("\n");
+                        }
+                    }
+
+                    if (dhcp_logging && (a_netbuf_to_len(skb)>=sizeof(WMI_DATA_HDR)+sizeof(ATH_MAC_HDR)+sizeof(ATH_LLC_SNAP_HDR)+24)) {
+                        int i;
+                        ATH_LLC_SNAP_HDR *datap=NULL;
+
+			datap = (ATH_LLC_SNAP_HDR *)(A_NETBUF_DATA(skb)+sizeof(WMI_DATA_HDR)+sizeof(ATH_MAC_HDR));
+
+                       //check for IP & UDP
+			if ((A_BE2CPU16(datap->etherType)==0x0800) && (((A_UINT8 *)a_netbuf_to_data(skb))[sizeof(WMI_DATA_HDR)+sizeof(ATH_MAC_HDR)+sizeof(ATH_LLC_SNAP_HDR)+9]==0x11)) {
+                           A_UINT16 *src_port, *dst_port;
+                           src_port=&(((A_UINT8 *)a_netbuf_to_data(skb))[sizeof(WMI_DATA_HDR)+sizeof(ATH_MAC_HDR)+sizeof(ATH_LLC_SNAP_HDR)+20]);
+                           dst_port=&(((A_UINT8 *)a_netbuf_to_data(skb))[sizeof(WMI_DATA_HDR)+sizeof(ATH_MAC_HDR)+sizeof(ATH_LLC_SNAP_HDR)+22]);
+
+                           //check for BOOTP/UDP ports
+                           if ((A_BE2CPU16(*src_port)==0x43) || (A_BE2CPU16(*src_port)==0x44)) {
+                               if ((A_BE2CPU16(*dst_port)==0x43) || (A_BE2CPU16(*dst_port)==0x44)) {
+                                   arp_dhcp_trace=1;
+                                   A_PRINTF("AR6000 DHCP: ");
+                                   for(i = 0; i < a_netbuf_to_len(skb); i++)
+                                      A_PRINTF("%02x ", ((A_UINT8 *)a_netbuf_to_data(skb))[i]);
+                                   //A_PRINTF("\n");
+                               }
+                           }
+                        }
+                    }
+
                     /* Get the Power save state of the STA */
                     if (ar->arNetworkType == AP_NETWORK) {
                         sta_t *conn = NULL;
@@ -3566,10 +3586,12 @@
                             }
                         }
                     }
+                    if (arp_dhcp_trace && skb && ((skb->dev->flags & IFF_UP) == IFF_UP)) { A_PRINTF(" ...TRACE1\n"); }
                     deliver_frames_to_nw_stack(skb);
                 }
             }
     } else {
+        if (arp_dhcp_trace && skb && ((skb->dev->flags & IFF_UP) == IFF_UP)) { A_PRINTF(" ...TRACE2\n"); }
         deliver_frames_to_nw_stack(skb);
     }
 refill:
